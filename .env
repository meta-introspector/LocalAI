GALLERIES=[{"name":"model-gallery", "url":"github:go-skynet/model-gallery/index.yaml"}, {"url": "github:go-skynet/model-gallery/huggingface.yaml","name":"huggingface"}]























#
#
#
#
#
# ADDRESS=127.0.0.1:8080
# ADDRESS=127.0.0.1:8080
# BUILD_TYPE=openblas
# COMPEL=0
# CONTEXT_SIZE=512
# CONTEXT_SIZE=512
# CORS=true
# CORS=true
# CORS_ALLOW_ORIGINS=*
# CORS_ALLOW_ORIGINS=*
# DEBUG=true
# EXTERNAL_GRPC_BACKENDS=my-backend:127.0.0.1:9000,my-backend2:/usr/bin/backend.py
# GALLERIES=[{"name":"model-gallery", "url":"github:go-skynet/model-gallery/index.yaml"}]
# GO_TAGS=stablediffusion
# HUGGINGFACE_HUB_CACHE=/usr/local/huggingface
# IMAGE_PATH=/tmp
# LD_PRELOAD=
# PYTHON_GRPC_MAX_WORKERS=1
# REBUILD=true
# SINGLE_ACTIVE_BACKEND=true
# THREADS=14
# UPLOAD_LIMIT
##
## (requires REBUILD=true)
## CORS settings
## CORS settings
## Default models context size
## Default models context size
## Default path for models
## Default path for models
## Define galleries.
## Define galleries.
## Disables COMPEL (Diffusers)
## Enable debug mode
## Enable debug mode
## Enable go tags, available: stablediffusion, tts
## Enable/Disable single backend (useful if only one GPU is available)
## List of external GRPC backends (note on the container image this variable is already set to use extra backends available in extra/)
## Note: prefer the number of physical cores. Overbooking the CPU degrades performance notably.
## Note: prefer the number of physical cores. Overbooking the CPU degrades performance notably.
## OpenBLAS: This is an open-source implementation of the BLAS library that aims to provide highly optimized code for various platforms. It includes support for multi-threading and can be compiled to use hardware-specific features for additional performance. OpenBLAS can run on many kinds of hardware, including CPUs from Intel, AMD, and ARM.
## Path where to store generated images
## Set number of threads.
## Set number of threads.
## Specify a build type. Available: cublas, openblas, clblas.
## Specify a build type. Available: cublas, openblas, clblas.
## Specify a default upload limit in MB (whisper)
## Specify a different bind address (defaults to ":8080")
## Specify a different bind address (defaults to ":8080")
## Uncomment and set to true to enable rebuilding from source
## Uncomment and set to true to enable rebuilding from source
## clBLAS:   This is an open-source implementation of the BLAS library that uses OpenCL, a framework for writing programs that execute across heterogeneous platforms consisting of CPUs, GPUs, and other processors. clBLAS is designed to take advantage of the parallel computing power of GPUs but can also run on any hardware that supports OpenCL. This includes hardware from different vendors like Nvidia, AMD, and Intel.
## cuBLAS: This is a GPU-accelerated version of the complete standard BLAS (Basic Linear Algebra Subprograms) library. It's provided by Nvidia and is part of their CUDA toolkit.
## models will to install will be visible in `/models/available`
## models will to install will be visible in `/models/available`
## stablediffusion: image generation with stablediffusion
## tts: enables text-to-speech with go-piper 
### Advanced settings ###
### Default number of workers for GRPC Python backends.
### Huggingface cache for models
### Preload libraries
### Python backends GRPC max workers
### This actually controls wether a backend can process multiple requests or not.
### Those are not really used by LocalAI, but from components in the stack ###
#export CUDACXX=/usr/local/cuda-12.2/bin/nvcc
BUILD_TYPE=cublas
DEBUG=true
PRELOAD_MODELS=[{"url": "github:go-skynet/model-gallery/gpt4all-j.yaml", "name": "gpt-3.5-turbo"}, { "url": "github:go-skynet/model-gallery/bert-embeddings.yaml", "name": "text-embedding-ada-002"}]
GALLERIES=[{"name":"model-gallery", "url":"github:go-skynet/model-gallery/index.yaml"}, {"url": "github:go-skynet/model-gallery/huggingface.yaml","name":"huggingface"}]
MODELS_PATH=/models
REBUILD=true
THREADS=2